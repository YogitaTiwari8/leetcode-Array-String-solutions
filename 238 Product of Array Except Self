// LeetCode: 238
// Problem name: Product of Array Except Self
// https://leetcode.com/problems/product-of-array-except-self/
// Category: Array, Prefix & Suffix
// Approach: 
// - Create two auxiliary arrays: prefix and suffix.
// - prefix[i] stores product of all elements before index i.
// - suffix[i] stores product of all elements after index i.
// - Final output[i] = prefix[i] * suffix[i]
// - No division used and runs in O(n) time.

Solution
--
class Solution {
    public int[] productExceptSelf(int[] nums) {
        int[] suffix=new int[nums.length];
        int[] prefix=new int[nums.length];
        int[] output=new int[nums.length];
        
        prefix[0]=1;
        for(int i=1;i<nums.length;i++){
            prefix[i]=prefix[i-1]*nums[i-1];
        }

        suffix[nums.length-1]=1;
        for(int i=nums.length-2;i>=0;i--){
            suffix[i]=suffix[i+1]*nums[i+1];
        }

        for(int i=0;i<nums.length;i++){
            output[i]=prefix[i]*suffix[i];
        }
        
        return output;
    }
}
--
