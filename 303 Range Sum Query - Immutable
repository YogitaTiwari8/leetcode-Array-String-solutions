// LeetCode: 303
// Problem name: Range Sum Query - Immutable
// Problem Link: https://leetcode.com/problems/range-sum-query-immutable/
// Approach:
// - Use prefix sum to precompute cumulative sums up to each index
// - To get sum of range [left, right], use:
//     - prefix[right] if left == 0
//     - prefix[right] - prefix[left - 1] otherwise

Solution
--
class NumArray {
    int[] prefix;

    public NumArray(int[] nums) {
        prefix = new int[nums.length];
        prefix[0] = nums[0];
        for (int i = 1; i < nums.length; i++) {
            prefix[i] = prefix[i - 1] + nums[i];
        }
    }
    
    public int sumRange(int left, int right) {
        if (left == 0) {
            return prefix[right];
        } else {
            return prefix[right] - prefix[left - 1];
        }
    }
}

/**
 * Your NumArray object will be instantiated and called as such:
 * NumArray obj = new NumArray(nums);
 * int param_1 = obj.sumRange(left, right);
 */
--
