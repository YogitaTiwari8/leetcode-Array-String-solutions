// LeetCode: 169
// Problem name: Majority Element
// https://leetcode.com/problems/majority-element/
// Category: Array, HashMap
// Approach:
// - Create a HashMap to store frequency of each number.
// - Traverse the array, updating counts in the map.
// - If any element's frequency exceeds n/2, return it immediately.
// - This works because problem guarantees that a majority element always exists.

Solution
--
class Solution {
    public int majorityElement(int[] nums) {
        int n=nums.length/2;
        Map<Integer,Integer> map=new HashMap<>();
        for(int i:nums){
            if(!map.containsKey(i)){
                map.put(i,1);
            }
            else{
                map.put(i,map.get(i)+1);                
            }
            if(map.get(i)>n){
                    return i;
            }
        }
        return 0;
    }
}
--
