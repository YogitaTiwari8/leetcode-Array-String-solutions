// LeetCode: 136
// Problem name: Single Number
// https://leetcode.com/problems/single-number/
// Approach:
// - Use XOR operation to cancel out duplicates
// - a ^ a = 0 and a ^ 0 = a, so only the non-duplicate remains

Solution
--
class Solution {
    public int singleNumber(int[] nums) {
        int result = 0;
        for (int n : nums) {
            result ^= n; // XOR helps eliminate duplicates
        }
        return result;
    }

    // Brute-force approach using a List
    // - Add number to list if not present
    // - Remove if already present (since it appeared twice)
    public int singleNumberApproach1(int[] nums) {
        List<Integer> list = new ArrayList<>();
        for (int n : nums) {
            if (list.contains(n)) {
                list.remove(Integer.valueOf(n));
            } else {
                list.add(n);
            }
        }
        return l
    }
}
--
