// LeetCode: 88
// Problem name: Merge Sorted Array
// https://leetcode.com/problems/merge-sorted-array/
// Approach:
// - Use three pointers: i for nums1 (m-1), j for nums2 (n-1), and k for merge index (m+n-1)
// - Compare elements from the end and place the larger one at the end of nums1
// - If nums2 still has elements left, copy them into nums1
// - This is an in-place merge without using extra space

Solution
--
class Solution {
    public void merge(int[] nums1, int m, int[] nums2, int n) {
        int i = m - 1;
        int j = n - 1;
        int k = m + n - 1;

        while (i >= 0 && j >= 0) {
            if (nums1[i] > nums2[j]) {
                nums1[k] = nums1[i];
                i--;
            } else {
                nums1[k] = nums2[j];
                j--;
            }
            k--;
        }

        while (j >= 0) {
            nums1[k] = nums2[j];
            j--;
            k--;
        }
    }
}
--
