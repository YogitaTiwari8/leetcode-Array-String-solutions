// LeetCode: 704
// Problem name: Binary Search
// https://leetcode.com/problems/binary-search/
// Category: Arrays, Two Pointer
// Approach: Used two pointers (low and high) to apply binary search.
// - 'low' starts at the beginning of the array, 'high' at the end.
// - Calculate 'mid' and compare value at mid with the target.
// - If found, return the mid index.
// - If target > mid value, search the right half (low = mid + 1).
// - If target < mid value, search the left half (high = mid - 1).
// - If not found, return -1.

Solution
--
class Solution {
    public int search(int[] nums, int target) {
        int low=0;
        int high=nums.length-1;
        while(low<=high){
            int mid=(low+high)/2;
            if(nums[mid]==target){
                return mid;
            }
            else if(nums[mid]<target){
                  low=mid+1;
            }
            else{
                high=mid-1;
            }
        }
        return -1;
    }
}
--
